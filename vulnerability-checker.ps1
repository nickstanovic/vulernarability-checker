# Define a list of ports that are commonly associated with vulnerabilities
$exploitPorts = @(
    21,     # FTP
    22,     # SSH
    23,     # Telnet
    25,     # SMTP
    80,     # HTTP
    110,    # POP3
    135,    # MS RPC
    139,    # NetBIOS
    445,    # SMB
    1433,   # MS SQL
    1521,   # Oracle SQL
    3050,   # Firebird SQL
    3306,   # MySQL
    3307,   # MySQL (Encrypted Connections)
    3351,   # Pervasive PSQL
    3389,   # RDP
    5900,   # VNC Server (first display)
    5000,   # Sybase SQL Server
    5432,   # PostgreSQL
    27017   # MongoDB
)

# Get all open ports on the system
$openPorts = Get-NetTCPConnection | Where-Object { $_.State -eq "Established" } |
             Select-Object -Unique OwningProcess,LocalPort | ForEach-Object {
                $processName = (Get-Process -Id $_.OwningProcess -ErrorAction SilentlyContinue).ProcessName
                [PSCustomObject]@{
                    'Port'        = $_.LocalPort
                    'Process ID'  = $_.OwningProcess
                    'Process Name'= $processName
                }
             } | Sort-Object Port

# Start with Clean Screen
Clear-Host

# Greeting
Write-Host "Welcome to Vulnerability Checker" -ForegroundColor Cyan

# Pause and Spacing for Readability
Start-Sleep -Seconds 1.5
Write-Host ""

# Explain to User
Write-Host "This script will list all open ports on your machine and assess them for vulnerabilities."
Write-Host "If an open port is not a common exploit, it will display in green. Hopefully all of them will be green"
Write-Host "However, if port is commonly associated with vulnerabilities, it will display a warning in red."

# Pause and Spacing for Readability
Start-Sleep -Seconds 3
Write-Host ""

# Display header
Write-Host "Port     | Process ID | Process Name" -ForegroundColor Yellow

# Display the open ports and highlight the ones that are in the exploitPorts list
foreach ($port in $openPorts) {
    $processName = $port.'Process Name'
    if ($processName -eq 'svchost') {
        $services = Get-CimInstance Win32_Service | Where-Object { $_.ProcessId -eq $port.'Process ID' }
        $serviceNames = $services | ForEach-Object { $_.DisplayName }
        $processName = "Service Host: " + [string]::Join(", ", $serviceNames)
    }

    if ($exploitPorts -contains $port.Port) {
        Write-Host ("{0,-8} | {1,-10} | {2}" -f $port.Port, $port.'Process ID', $processName) -ForegroundColor Red
    } else {
        Write-Host ("{0,-8} | {1,-10} | {2}" -f $port.Port, $port.'Process ID', $processName) -ForegroundColor Green
    }
}

# One last line break to not look crowded when done
Write-Host ""
